{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","e","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setisEditing","enteredExpensedData","id","Math","random","toString","onAddExpense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","ExpenseDate","year","getFullYear","month","toLocaleString","day","Card","classes","children","ExpenseItem","ExpensesList","filteredItems","length","ExpensesFilter","selectedYear","selected","onChangeFilter","Expenses","items","filteredYear","setFilteredYear","filteredExpenses","filter","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27db172f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const titleChangeHandler = (e) => {\r\n      setEnteredTitle(e.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick={props.onCancel} type=\"button\">Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;","import React, {useState} from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n    const saveExpenseDataHandler = (enteredExpensedData) => {\r\n        const expenseData = {\r\n            ...enteredExpensedData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setisEditing(false);\r\n    };\r\n\r\n    const [isEditing, setisEditing] = useState(false);\r\n\r\n    const startEditingHandler = () => {\r\n        setisEditing(true);\r\n    }\r\n    const stopEditingHandler = () => {\r\n      setisEditing(false);\r\n    };\r\n\r\n    \r\n    return (\r\n      <div className=\"new-expense\">\r\n        {!isEditing && (\r\n          <button type=\"button\" onClick={startEditingHandler}>\r\n            Add New Expense\r\n          </button>\r\n        )}\r\n        {isEditing && (\r\n          <ExpenseForm\r\n            onCancel={stopEditingHandler}\r\n            onSaveExpenseData={saveExpenseDataHandler}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n    if (props.maxValue > 0) {\r\n      barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n      <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n          <div\r\n            className=\"chart-bar__fill\"\r\n            style={{ height: barFillHeight }}\r\n          ></div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n      { label: \"Jan\", value: 0 },\r\n      { label: \"Feb\", value: 0 },\r\n      { label: \"Mar\", value: 0 },\r\n      { label: \"Apr\", value: 0 },\r\n      { label: \"May\", value: 0 },\r\n      { label: \"Jun\", value: 0 },\r\n      { label: \"Jul\", value: 0 },\r\n      { label: \"Aug\", value: 0 },\r\n      { label: \"Sep\", value: 0 },\r\n      { label: \"Oct\", value: 0 },\r\n      { label: \"Nov\", value: 0 },\r\n      { label: \"Dec\", value: 0 },\r\n    ];\r\n\r\n    for(const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); //starting at 0 => January is 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n\r\nexport default ExpensesChart;","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const year = props.date.getFullYear();\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.filteredItems.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.filteredItems.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const selectedYear = props.selected;\r\n  const dropdownChangeHandler = (e) => {\r\n    // console.log(e.target.value);\r\n    props.onChangeFilter(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={selectedYear} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const expenses = props.items;\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n  \r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = expenses.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  \r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpensesList filteredItems={filteredExpenses} />\r\n    </Card>\r\n  );\r\n}\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport \"./App.css\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    // console.log(DUMMY_EXPENSES);\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n    \n  };\n  \n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}